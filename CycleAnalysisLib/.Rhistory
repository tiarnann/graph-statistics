getwd()
library(CycleAnalysisLib)
#library('cycleanalysis')
library('igraph')
library('statnet')
# Read data from .csv files
nodes <- read.csv("Dataset_nodes_200_500.csv", header=T, as.is=T)
edges <- read.csv("Dataset_edges_200_500.csv", header=T, as.is=T)
nodes
edges
# Manipulate data into correct format
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen=5, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
cc$cyclecounts
#library('cycleanalysis')
library('igraph')
library('statnet')
# Read data from .csv files
nodes <- read.csv("Dataset_nodes_200_500.csv", header=T, as.is=T)
edges <- read.csv("Dataset_edges_200_500.csv", header=T, as.is=T)
# Manipulate data into correct format
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen=5, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
library(CycleAnalysisLib)
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen=5, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
message(as.character(length(cc$cycles)), " Cycles Found.")
a<-cc$minimumEdgeWeight
b<-cc$edgeWeightTotal
c<-cc$mostImportantNodes
d<-cc$cyclecounts
a
b
c
d
