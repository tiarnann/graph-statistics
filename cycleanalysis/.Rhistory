#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
library(cycleanalysis)
library('cycleanalysis')
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
warnings()
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
warnings()
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
cc$minimumEdgeWeight
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
library(cycleanalysis)
cc$mostImportantNodes
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
cc$mostImportantNodes
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
library(cycleanalysis)
cc$cycles
c <- (1,2,3,4,5,6,1,2,3,4,5,6)
c <- {1,2,3,4,14,6,7}
c <- list(1,2,3,4,15,3)
highestIndex(c)
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
highestIndex(c)
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
highestIndex(c)
c <- list(9,9,9,9)
highestIndex(c)
c
c <- c(9,9,9,9)
highestIndex(c)
c <- c(1,2,3,4,15,3)
highestIndex(c)
c <- 's01'
unlist(strsplit("s45", 's', fixed fixed = TRUE)
unlist(strsplit("s45", 's', fixed = TRUE)
d <- unlist(strsplit("s45", 's', fixed = TRUE)
d <- unlist(strsplit("s45", 's', fixed = TRUE)
e <- as.numeric(d)
e <- as.numeric(d)
e
f <- as.numeric(d[2])
f
f <- as.numeric(d[1])
f
f <- as.numeric(d[3])
f
d <- unlist(strsplit("s45", 's', fixed = TRUE)
)
d
d[1]
d[2]
e <- as.numeric(d[2])
e
e[1]
e[0]
e[1]
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
library(cycleanalysis)
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
cc$mostImportantNodes
c <- list(1,2,3,4,5)
c[1]
c[2]
c[2][1]
c[[2]]
c[[[2]]]
c[[2]]
c[[2]][1]
c[[2]][[1]]
c <- unlist(strsplit("s02", 's', fixed=TRUE))
d <- as.numeric(c[2])
d
d <- as.numeric(c[[2]])
d
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
library(cycleanalysis)
cc$mostImportantNodes
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
library(cycleanalysis)
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
library(cycleanalysis)
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
cc$mostImportantNodes
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
library(cycleanalysis)
#(1) change directory
library('cycleanalysis')
library('igraph')
library('statnet')
nodes <- read.csv("sample_data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("sample_data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
net <- graph_from_data_frame(d=edges, vertices=nodes, directed=T)
adjacencyMat <- get.adjacency(net, sparse=FALSE)
edgeMat <- as.matrix(edges, sparse=FALSE)
plot(net, edge.arrow.size=.4)
# maxlen is the max cycle length to search for
cc <- kcycle.censusExtension(adjacencyMat, edges, maxlen = 10, tabulate.by.vertex = FALSE, cycle.comembership = "bylength")
s <- paste(c("List length ", as.character(length(cc)),"\nHow bou dat"), sep=" ")
message(s)
library(cycleanalysis)
cc$mostImportantNodes
library(cycleanalysis)
